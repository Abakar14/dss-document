

********************************
Triger example
CREATE OR REPLACE TRIGGER ADM_Benutzer_to_Megashit
after insert  or update or delete
on ADM_benutzer
referencing new as new old as old
for each row
declare
begin

  -- 07.07.08 sf Neuanlage
  mega_out_util.insert_megashit_maja( 'ADM_BENUTZER', nvl( :new.ADM_BENUTZER_ID, :old.ADM_BENUTZER_ID ), Inserting, Updating, Deleting );

end;
/

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ALTER TABLE PROJEKT.ADM_BENUTZER
 DROP PRIMARY KEY CASCADE;

DROP TABLE PROJEKT.ADM_BENUTZER CASCADE CONSTRAINTS;

CREATE TABLE PROJEKT.ADM_BENUTZER
(
  ADM_BENUTZER_ID        NUMBER                 NOT NULL,
  NIEDERLASSUNG_ID_FK    NUMBER                 NOT NULL,
  BENUTZERNAME           VARCHAR2(60 BYTE)      NOT NULL,
  LOGINNAME              VARCHAR2(20 BYTE)      NOT NULL,
  PASSWORT               VARCHAR2(20 BYTE),
  SATZSTATUS             VARCHAR2(1 BYTE)       NOT NULL,
  INSDATE                DATE,
  INSUSER                VARCHAR2(20 BYTE),
  ADM_BENUTZERTYP_ID_FK  NUMBER(22),
  FUNKTION               VARCHAR2(250 BYTE),
  TELEFON                VARCHAR2(20 BYTE),
  TELEFAX                VARCHAR2(20 BYTE),
  EMAIL                  VARCHAR2(250 BYTE),
  FIRMA                  VARCHAR2(100 BYTE),
  ABTEILUNG              VARCHAR2(100 BYTE),
  STRASSE                VARCHAR2(100 BYTE),
  HAUSNR                 VARCHAR2(100 BYTE),
  LAND_ID_FK             NUMBER,
  PLZ                    VARCHAR2(100 BYTE),
  ORT                    VARCHAR2(100 BYTE),
  BRANCHE                VARCHAR2(100 BYTE),
  UPDUSER                VARCHAR2(20 BYTE),
  GUELTIG_VON            DATE,
  GUELTIG_BIS            DATE,
  ANZAHL_LOGIN           NUMBER,
  MAXLOGIN               NUMBER,
  LETZTES_LOGIN          DATE,
  MANDANT_ID_FK          NUMBER,
  INSPRGM                VARCHAR2(20 BYTE),
  UPDPRGM                VARCHAR2(20 BYTE),
  UPDDATE                DATE,
  NACHNAME               VARCHAR2(80 BYTE),
  VORNAME                VARCHAR2(80 BYTE),
  ADM_BEREICH_ID_FK      NUMBER,
  VKZ                    NUMBER,
  PASSWORT_HASH          VARCHAR2(100 CHAR),
  ADM_BENUTZER_ID_FK     NUMBER,
  FOTO                   BLOB,
  MOBILTELEFON           VARCHAR2(40 BYTE),
  FEHLVERSUCHE           NUMBER,
  KENNZEICHENMASKE       VARCHAR2(100 BYTE),
  KUNDE                  VARCHAR2(1 BYTE),
  ANREDETYP_ID_FK        NUMBER,
  TITEL                  VARCHAR2(100 BYTE)
)
LOB (FOTO) STORE AS (
  TABLESPACE  TS10MB
  ENABLE      STORAGE IN ROW
  CHUNK       8192
  RETENTION
  NOCACHE
  LOGGING
      STORAGE    (
                  INITIAL          10M
                  NEXT             10M
                  MINEXTENTS       1
                  MAXEXTENTS       UNLIMITED
                  PCTINCREASE      0
                  BUFFER_POOL      DEFAULT
                  FLASH_CACHE      DEFAULT
                  CELL_FLASH_CACHE DEFAULT
                 ))
TABLESPACE TS10MB
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          10M
            NEXT             10M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE INDEX PROJEKT.ADM_BENUTZER_ADM_BEREICH_FK ON PROJEKT.ADM_BENUTZER
(ADM_BEREICH_ID_FK)
LOGGING
TABLESPACE TS100KBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          104K
            NEXT             104K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_ANREDE_FK ON PROJEKT.ADM_BENUTZER
(ANREDETYP_ID_FK)
LOGGING
TABLESPACE TS100KBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          104K
            NEXT             104K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_BENUTZER_FK ON PROJEKT.ADM_BENUTZER
(ADM_BENUTZER_ID_FK)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_BENUTZERTYP_FK ON PROJEKT.ADM_BENUTZER
(ADM_BENUTZERTYP_ID_FK)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_IDX1 ON PROJEKT.ADM_BENUTZER
(LOGINNAME)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_IDX2 ON PROJEKT.ADM_BENUTZER
(NIEDERLASSUNG_ID_FK, LOGINNAME)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_LAND_FK ON PROJEKT.ADM_BENUTZER
(LAND_ID_FK)
LOGGING
TABLESPACE TS100KBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          104K
            NEXT             104K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_MANDANT_FK ON PROJEKT.ADM_BENUTZER
(MANDANT_ID_FK)
LOGGING
TABLESPACE TS100KBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          104K
            NEXT             104K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX PROJEKT.ADM_BENUTZER_NIEDERLASSUNG_FK ON PROJEKT.ADM_BENUTZER
(NIEDERLASSUNG_ID_FK)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX PROJEKT.ADM_BENUTZER_PK ON PROJEKT.ADM_BENUTZER
(ADM_BENUTZER_ID)
LOGGING
TABLESPACE TS1MBIDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER PROJEKT.ADM_Benutzer_to_Megashit
after insert  or update or delete
ON PROJEKT.ADM_BENUTZER
referencing new as new old as old
for each row
declare
begin

  -- 07.07.08 sf Neuanlage
  mega_out_util.insert_megashit_maja( 'ADM_BENUTZER', nvl( :new.ADM_BENUTZER_ID, :old.ADM_BENUTZER_ID ), Inserting, Updating, Deleting );

end;
/


CREATE OR REPLACE TRIGGER PROJEKT.ADM_BENUTZER_ANZ_LOGIN_UPD
before update
ON PROJEKT.ADM_BENUTZER
referencing new as new old as old
for each row
DISABLE
begin

  -- Testet, ob es ein Update durch einen Login war und über die Replikation kam
  -- und zählt entsprechend Anzahl_LOgin auf Basis des alten Wertes in projekt.adm_benutzer
  -- hoch.
  -- 16.03.04 sf V1.0

  if compare.IsEqual( shitcontrol.nFromRelation, MyRepl.nRelationnr ) and
     compare.IsEqual( :new.ADM_BENUTZER_ID, :old.ADM_BENUTZER_ID ) and
     compare.IsEqual( :new.NIEDERLASSUNG_ID_FK, :old.NIEDERLASSUNG_ID_FK ) and
     compare.IsEqual( :new.BENUTZERNAME, :old.BENUTZERNAME ) and
     compare.IsEqual( :new.LOGINNAME, :old.LOGINNAME ) and
     compare.IsEqual( :new.PASSWORT, :old.PASSWORT ) and
     compare.IsEqual( :new.SATZSTATUS, :old.SATZSTATUS ) and
     compare.IsEqual( :new.INSDATE, :old.INSDATE ) and
     compare.IsEqual( :new.INSUSER, :old.INSUSER ) and
     compare.IsEqual( :new.ADM_BENUTZERTYP_ID_FK, :old.ADM_BENUTZERTYP_ID_FK ) and
     compare.IsEqual( :new.FUNKTION, :old.FUNKTION ) and
     compare.IsEqual( :new.TELEFON, :old.TELEFON ) and
     compare.IsEqual( :new.TELEFAX, :old.TELEFAX ) and
     compare.IsEqual( :new.EMAIL, :old.EMAIL ) and
     compare.IsEqual( :new.FIRMA, :old.FIRMA ) and
     compare.IsEqual( :new.ABTEILUNG, :old.ABTEILUNG ) and
     compare.IsEqual( :new.STRASSE, :old.STRASSE ) and
     compare.IsEqual( :new.HAUSNR, :old.HAUSNR ) and
     compare.IsEqual( :new.LAND_ID_FK, :old.LAND_ID_FK ) and
     compare.IsEqual( :new.PLZ, :old.PLZ ) and
     compare.IsEqual( :new.ORT, :old.ORT ) and
     compare.IsEqual( :new.BRANCHE, :old.BRANCHE ) and
     compare.IsEqual( :new.GUELTIG_VON, :old.GUELTIG_VON ) and
     compare.IsEqual( :new.GUELTIG_BIS, :old.GUELTIG_BIS ) and
     compare.IsEqual( :new.MAXLOGIN, :old.MAXLOGIN ) and
     compare.IsEqual( :new.MANDANT_ID_FK, :old.MANDANT_ID_FK ) and
     compare.IsEqual( :new.INSPRGM, :old.INSPRGM ) and
     compare.IsEqual( :new.NACHNAME, :old.NACHNAME ) and
     compare.IsEqual( :new.VORNAME, :old.VORNAME ) and
     compare.IsEqual( :new.ADM_BEREICH_ID_FK, :old.ADM_BEREICH_ID_FK ) and
     compare.IsEqual( :new.VKZ, :old.VKZ ) and

     ( compare.IsNotEqual( :new.UPDUSER, :old.UPDUSER ) or
       compare.IsNotEqual( :new.UPDPRGM, :old.UPDPRGM ) or
       compare.IsNotEqual( :new.UPDDATE, :old.UPDDATE ) or
       compare.IsNotEqual( :new.ANZAHL_LOGIN, :old.ANZAHL_LOGIN ) or
       compare.IsNotEqual( :new.LETZTES_LOGIN, :old.LETZTES_LOGIN )
     ) then

     -- Anzahl Login auf Basis des alten Wertes in projekt.adm_benutzer hochzählen

     :new.Anzahl_Login := nvl( :old.Anzahl_Login, 0 ) + 1;

   end if;

end;
/


CREATE OR REPLACE TRIGGER PROJEKT.ADM_BENUTZER_OUT

after insert or update or delete on projekt.ADM_BENUTZER

referencing
	new as new
	old as old

for each row
declare

begin

	if inserting then

		insert	into prostam.ADM_BENUTZER
			( ADM_BENUTZER_ID,
			  NIEDERLASSUNG_ID_FK,
			  BENUTZERNAME,
			  LOGINNAME,
			  PASSWORT,
			  SATZSTATUS,
			  INSDATE,
			  INSUSER,
			  ADM_BENUTZERTYP_ID_FK,
			  FUNKTION,
			  TELEFON,
			  TELEFAX,
			  EMAIL,
			  FIRMA,
			  ABTEILUNG,
			  STRASSE,
			  HAUSNR,
			  LAND_ID_FK,
			  PLZ,
			  ORT,
			  BRANCHE,
			  UPDUSER,
			  GUELTIG_VON,
			  GUELTIG_BIS,
			  ANZAHL_LOGIN,
			  MAXLOGIN,
			  LETZTES_LOGIN,
			  MANDANT_ID_FK,
			  INSPRGM,
			  UPDPRGM,
			  UPDDATE,
			  NACHNAME,
			  VORNAME,
			  ADM_BEREICH_ID_FK,
			  VKZ,
              PASSWORT_HASH,
			  ADM_BENUTZER_ID_FK,
			  FOTO,
			  MOBILTELEFON,
			  FEHLVERSUCHE,
			  KENNZEICHENMASKE,
			  KUNDE,
			  ANREDETYP_ID_FK,
			  TITEL
			  )
		values	( :new.ADM_BENUTZER_ID,
			  :new.NIEDERLASSUNG_ID_FK,
			  :new.BENUTZERNAME,
			  :new.LOGINNAME,
			  :new.PASSWORT,
			  :new.SATZSTATUS,
			  :new.INSDATE,
			  :new.INSUSER,
			  :new.ADM_BENUTZERTYP_ID_FK,
			  :new.FUNKTION,
			  :new.TELEFON,
			  :new.TELEFAX,
			  :new.EMAIL,
			  :new.FIRMA,
			  :new.ABTEILUNG,
			  :new.STRASSE,
			  :new.HAUSNR,
			  :new.LAND_ID_FK,
			  :new.PLZ,
			  :new.ORT,
			  :new.BRANCHE,
			  :new.UPDUSER,
			  :new.GUELTIG_VON,
			  :new.GUELTIG_BIS,
			  :new.ANZAHL_LOGIN,
			  :new.MAXLOGIN,
			  :new.LETZTES_LOGIN,
			  :new.MANDANT_ID_FK,
			  :new.INSPRGM,
			  :new.UPDPRGM,
			  :new.UPDDATE,
			  :new.NACHNAME,
			  :new.VORNAME,
			  :new.ADM_BEREICH_ID_FK,
			  :new.VKZ,
              :new.PASSWORT_HASH,
			  :new.ADM_BENUTZER_ID_FK,
			  :new.FOTO,
			  :new.MOBILTELEFON,
			  :new.FEHLVERSUCHE,
			  :new.KENNZEICHENMASKE,
			  :new.KUNDE,
			  :new.ANREDETYP_ID_FK,
			  :new.TITEL
			  );

		insert	into prostam_char.ADM_BENUTZER
			( ADM_BENUTZER_ID,
			  NIEDERLASSUNG_ID_FK,
			  BENUTZERNAME,
			  LOGINNAME,
			  PASSWORT,
			  SATZSTATUS,
			  INSDATE,
			  INSUSER,
			  ADM_BENUTZERTYP_ID_FK,
			  FUNKTION,
			  TELEFON,
			  TELEFAX,
			  EMAIL,
			  FIRMA,
			  ABTEILUNG,
			  STRASSE,
			  HAUSNR,
			  LAND_ID_FK,
			  PLZ,
			  ORT,
			  BRANCHE,
			  UPDUSER,
			  GUELTIG_VON,
			  GUELTIG_BIS,
			  ANZAHL_LOGIN,
			  MAXLOGIN,
			  LETZTES_LOGIN,
			  MANDANT_ID_FK,
			  INSPRGM,
			  UPDPRGM,
			  UPDDATE,
			  NACHNAME,
			  VORNAME,
			  ADM_BEREICH_ID_FK,
			  VKZ,
              PASSWORT_HASH,
			  ADM_BENUTZER_ID_FK,
			  FOTO,
			  MOBILTELEFON,
			  FEHLVERSUCHE,
			  KENNZEICHENMASKE,
			  KUNDE,
			  ANREDETYP_ID_FK,
			  TITEL
			  )
		values	( :new.ADM_BENUTZER_ID,
			  :new.NIEDERLASSUNG_ID_FK,
			  :new.BENUTZERNAME,
			  :new.LOGINNAME,
			  :new.PASSWORT,
			  :new.SATZSTATUS,
			  :new.INSDATE,
			  :new.INSUSER,
			  :new.ADM_BENUTZERTYP_ID_FK,
			  :new.FUNKTION,
			  :new.TELEFON,
			  :new.TELEFAX,
			  :new.EMAIL,
			  :new.FIRMA,
			  :new.ABTEILUNG,
			  :new.STRASSE,
			  :new.HAUSNR,
			  :new.LAND_ID_FK,
			  :new.PLZ,
			  :new.ORT,
			  :new.BRANCHE,
			  :new.UPDUSER,
			  :new.GUELTIG_VON,
			  :new.GUELTIG_BIS,
			  :new.ANZAHL_LOGIN,
			  :new.MAXLOGIN,
			  :new.LETZTES_LOGIN,
			  :new.MANDANT_ID_FK,
			  :new.INSPRGM,
			  :new.UPDPRGM,
			  :new.UPDDATE,
			  :new.NACHNAME,
			  :new.VORNAME,
			  :new.ADM_BEREICH_ID_FK,
			  :new.VKZ,
              :new.PASSWORT_HASH,
			  :new.ADM_BENUTZER_ID_FK,
			  :new.FOTO,
			  :new.MOBILTELEFON,
			  :new.FEHLVERSUCHE,
			  :new.KENNZEICHENMASKE,
			  :new.KUNDE,
			  :new.ANREDETYP_ID_FK,
			  :new.TITEL
			  );

	elsif updating then

		update	prostam.ADM_BENUTZER
		set	NIEDERLASSUNG_ID_FK = :new.NIEDERLASSUNG_ID_FK,
			BENUTZERNAME = :new.BENUTZERNAME,
			LOGINNAME = :new.LOGINNAME,
			PASSWORT = :new.PASSWORT,
			SATZSTATUS = :new.SATZSTATUS,
			INSDATE = :new.INSDATE,
			INSUSER = :new.INSUSER,
			ADM_BENUTZERTYP_ID_FK = :new.ADM_BENUTZERTYP_ID_FK,
			FUNKTION = :new.FUNKTION,
			TELEFON = :new.TELEFON,
			TELEFAX = :new.TELEFAX,
			EMAIL = :new.EMAIL,
			FIRMA = :new.FIRMA,
			ABTEILUNG = :new.ABTEILUNG,
			STRASSE = :new.STRASSE,
			HAUSNR = :new.HAUSNR,
			LAND_ID_FK = :new.LAND_ID_FK,
			PLZ = :new.PLZ,
			ORT = :new.ORT,
			BRANCHE = :new.BRANCHE,
			UPDUSER = :new.UPDUSER,
			GUELTIG_VON = :new.GUELTIG_VON,
			GUELTIG_BIS = :new.GUELTIG_BIS,
			ANZAHL_LOGIN = :new.ANZAHL_LOGIN,
			MAXLOGIN = :new.MAXLOGIN,
			LETZTES_LOGIN = :new.LETZTES_LOGIN,
			MANDANT_ID_FK = :new.MANDANT_ID_FK,
			INSPRGM = :new.INSPRGM,
			UPDPRGM = :new.UPDPRGM,
			UPDDATE = :new.UPDDATE,
			NACHNAME = :new.NACHNAME,
			VORNAME = :new.VORNAME,
			ADM_BEREICH_ID_FK = :new.ADM_BEREICH_ID_FK,
			VKZ = :new.VKZ,
            PASSWORT_HASH = :new.PASSWORT_HASH,
			ADM_BENUTZER_ID_FK = :new.ADM_BENUTZER_ID_FK,
			FOTO = :new.FOTO,
			MOBILTELEFON = :new.MOBILTELEFON,
			FEHLVERSUCHE = :new.FEHLVERSUCHE,
			KENNZEICHENMASKE = :new.KENNZEICHENMASKE,
			KUNDE = :new.KUNDE,
			ANREDETYP_ID_FK = :new.ANREDETYP_ID_FK,
			TITEL = :new.TITEL
		where	ADM_BENUTZER_ID = :old.ADM_BENUTZER_ID;

		update	prostam_char.ADM_BENUTZER
		set	NIEDERLASSUNG_ID_FK = :new.NIEDERLASSUNG_ID_FK,
			BENUTZERNAME = :new.BENUTZERNAME,
			LOGINNAME = :new.LOGINNAME,
			PASSWORT = :new.PASSWORT,
			SATZSTATUS = :new.SATZSTATUS,
			INSDATE = :new.INSDATE,
			INSUSER = :new.INSUSER,
			ADM_BENUTZERTYP_ID_FK = :new.ADM_BENUTZERTYP_ID_FK,
			FUNKTION = :new.FUNKTION,
			TELEFON = :new.TELEFON,
			TELEFAX = :new.TELEFAX,
			EMAIL = :new.EMAIL,
			FIRMA = :new.FIRMA,
			ABTEILUNG = :new.ABTEILUNG,
			STRASSE = :new.STRASSE,
			HAUSNR = :new.HAUSNR,
			LAND_ID_FK = :new.LAND_ID_FK,
			PLZ = :new.PLZ,
			ORT = :new.ORT,
			BRANCHE = :new.BRANCHE,
			UPDUSER = :new.UPDUSER,
			GUELTIG_VON = :new.GUELTIG_VON,
			GUELTIG_BIS = :new.GUELTIG_BIS,
			ANZAHL_LOGIN = :new.ANZAHL_LOGIN,
			MAXLOGIN = :new.MAXLOGIN,
			LETZTES_LOGIN = :new.LETZTES_LOGIN,
			MANDANT_ID_FK = :new.MANDANT_ID_FK,
			INSPRGM = :new.INSPRGM,
			UPDPRGM = :new.UPDPRGM,
			UPDDATE = :new.UPDDATE,
			NACHNAME = :new.NACHNAME,
			VORNAME = :new.VORNAME,
			ADM_BEREICH_ID_FK = :new.ADM_BEREICH_ID_FK,
			VKZ = :new.VKZ,
            PASSWORT_HASH = :new.PASSWORT_HASH,
			ADM_BENUTZER_ID_FK = :new.ADM_BENUTZER_ID_FK,
			FOTO = :new.FOTO,
			MOBILTELEFON = :new.MOBILTELEFON,
			FEHLVERSUCHE = :new.FEHLVERSUCHE,
			KENNZEICHENMASKE = :new.KENNZEICHENMASKE,
			KUNDE = :new.KUNDE,
			ANREDETYP_ID_FK = :new.ANREDETYP_ID_FK,
			TITEL = :new.TITEL
		where	ADM_BENUTZER_ID = :old.ADM_BENUTZER_ID;

	elsif deleting then

		delete from prostam.ADM_BENUTZER
		where	ADM_BENUTZER_ID = :old.ADM_BENUTZER_ID;

		delete from prostam_char.ADM_BENUTZER
		where	ADM_BENUTZER_ID = :old.ADM_BENUTZER_ID;

	end if;
end;
/


DROP SYNONYM PRO0012.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0012.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRONUER.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRONUER.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBERL.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBERL.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROERFU.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROERFU.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROOSNA.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROOSNA.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROINGB.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROINGB.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROHANN.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROHANN.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROWEIN.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROWEIN.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROQUIC.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROQUIC.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROROSE.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROROSE.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROROST.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROROST.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0013.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0013.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROKOBL.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROKOBL.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROMUEC.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROMUEC.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROMEIN.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROMEIN.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROALZE.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROALZE.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROAUGS.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROAUGS.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROMUEN.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROMUEN.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROMAGD.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROMAGD.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBAYR.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBAYR.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROLEIP.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROLEIP.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROJENA.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROJENA.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROWUER.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROWUER.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROFRAN.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROFRAN.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBRAU.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBRAU.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRODUIS.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRODUIS.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROLAHR.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROLAHR.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROFOET.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROFOET.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROKASS.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROKASS.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBREM.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBREM.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0095.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0095.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0094.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0094.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0093.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0093.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROHAMB.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROHAMB.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0015.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0015.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROULMM.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROULMM.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROTOUR.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROTOUR.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROWUPP.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROWUPP.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRONIKL.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRONIKL.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROTONG.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROTONG.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBRUC.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBRUC.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRODONA.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRODONA.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROHERF.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROHERF.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROTHER.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROTHER.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRODRES.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRODRES.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROSTRA.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROSTRA.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRODORT.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRODORT.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROSTUT.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROSTUT.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0017.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0017.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0055.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0055.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROBORR.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROBORR.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0096.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0096.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0078.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0078.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROKOEL.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROKOEL.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0062.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0062.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0018.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0018.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PROGIES.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PROGIES.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0063.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0063.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


DROP SYNONYM PRO0065.ADM_BENUTZER;

CREATE OR REPLACE SYNONYM PRO0065.ADM_BENUTZER FOR PROJEKT.ADM_BENUTZER;


ALTER TABLE PROJEKT.ADM_BENUTZER ADD (
  CONSTRAINT ADM_BENUTZER_CHK1
  CHECK (       SATZSTATUS IN ('A','I','L')       )
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_PK
  PRIMARY KEY
  (ADM_BENUTZER_ID)
  USING INDEX PROJEKT.ADM_BENUTZER_PK
  ENABLE VALIDATE);

ALTER TABLE PROJEKT.ADM_BENUTZER ADD (
  CONSTRAINT ADM_BENUTZER_ADM_BEREICH_FK 
  FOREIGN KEY (ADM_BEREICH_ID_FK) 
  REFERENCES PROJEKT.ADM_BEREICH (ADM_BEREICH_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_ANREDE_FK 
  FOREIGN KEY (ANREDETYP_ID_FK) 
  REFERENCES PROJEKT.ANREDETYP (ANREDETYP_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_BENUTZER_FK 
  FOREIGN KEY (ADM_BENUTZER_ID_FK) 
  REFERENCES PROJEKT.ADM_BENUTZER (ADM_BENUTZER_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_BENUTZERTYP_FK 
  FOREIGN KEY (ADM_BENUTZERTYP_ID_FK) 
  REFERENCES PROJEKT.ADM_BENUTZERTYP (ADM_BENUTZERTYP_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_LAND_FK 
  FOREIGN KEY (LAND_ID_FK) 
  REFERENCES PROJEKT.LAND (LAND_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_MANDANT_FK 
  FOREIGN KEY (MANDANT_ID_FK) 
  REFERENCES PROJEKT.MANDANT (MANDANT_ID)
  ENABLE VALIDATE,
  CONSTRAINT ADM_BENUTZER_NIEDERLASSUNG_FK 
  FOREIGN KEY (NIEDERLASSUNG_ID_FK) 
  REFERENCES PROJEKT.NIEDERLASSUNG (NIEDERLASSUNG_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROALZE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROAUGS;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBAYR;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBERL;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBORR;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBRAU;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBREM;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROBRUC;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRODONA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRODORT;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRODRES;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRODUIS;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROERFU;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROFOET;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROFRAN;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROGIES;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROHAMB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROHANN;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROHERF;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROINGB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROJENA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROKASS;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROKOBL;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROKOEL;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROLAHR;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROLEIP;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROMAGD;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROMAJA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROMEIN;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROMUEC;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROMUEN;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRONIKL;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRONUER;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROOSNA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROQUIC;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROROSE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROROST;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROSTRA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROSTUT;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROTHER;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROTONG;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROTOUR;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROULMM;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROWEIN;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROWUER;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PROWUPP;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0012;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0013;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0015;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0017;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0018;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0055;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0062;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0063;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0065;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0078;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0093;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0094;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0095;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON PROJEKT.ADM_BENUTZER TO PRO0096;
